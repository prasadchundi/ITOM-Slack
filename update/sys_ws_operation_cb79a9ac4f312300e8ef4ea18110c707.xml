<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/x-www-form-urlencoded</consumes>
        <consumes_customized>true</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>ITOM Data</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	
	// Always send back a successful 200 response and handle error notifications in message
	response.setStatus(200);
	
	// Validate the Slack app token
	var authtoken = gs.getProperty("x_111982_slack_int.itom.slack.app.token01");
	if(request.queryParams.token != authtoken) {
		return "Unauthorized Request";
	}
	
	try {
		var respText = "Your " + request.queryParams.command + " " + 
						request.queryParams.text + " request has been received... processing";
		// Format an initial response
		var payload = {
			"response_type": "ephemeral",
			"text": respText
		};
		
		gs.log('---> About to request data', 'Slack ITOM Data');
		
		// Send ephemeral response back to Slack to notify user command is processing
		
		var slackResponse = new sn_ws.RESTMessageV2();
		slackResponse.setEndpoint(request.queryParams.response_url);
		slackResponse.setHttpMethod('POST');
		slackResponse.setRequestBody(JSON.stringify(payload));
		slackResponse.setRequestHeader('Content-type','application/json');
		var slackOutput = slackResponse.execute();
		
		// Get the requests query parameters and create an event to process the request async
		
		var parms = JSON.stringify(request.queryParams);
		gs.eventQueue("x_111982_slack_int.itom.slack.getdata", current, parms);
		
		return;
	}
	catch (e){
		gs.log('---> Slack Integration error: ' + e, 'Slack ITOM Data');
		response.setBody('Error in processing: ' + e);
		return;
	}
	
})(request, response);]]></operation_script>
        <operation_uri>/api/x_111982_slack_int/itom_slack_get_data</operation_uri>
        <produces>application/json</produces>
        <produces_customized>true</produces_customized>
        <relative_path>/</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>false</requires_authentication>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-11-12 15:24:58</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>cb79a9ac4f312300e8ef4ea18110c707</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>ITOM Data</sys_name>
        <sys_package display_value="Slack Integration - ITOM APIs" source="x_111982_slack_int">c26529a04f312300e8ef4ea18110c725</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Slack Integration - ITOM APIs">c26529a04f312300e8ef4ea18110c725</sys_scope>
        <sys_update_name>sys_ws_operation_cb79a9ac4f312300e8ef4ea18110c707</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-11-12 15:27:49</sys_updated_on>
        <web_service_definition display_value="ITOM Slack - Get Data">7a5929ac4f312300e8ef4ea18110c78d</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
